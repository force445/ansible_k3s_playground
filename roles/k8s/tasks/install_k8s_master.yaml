---
- name: Install kubectl with binary
  ansible.builtin.shell: |
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

- name: Download kubectl SHA256 checksum
  ansible.builtin.shell: |
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"

- name: Validate kubectl binary checksum
  ansible.builtin.shell: |
    echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check

- name: Install kubectl binary
  ansible.builtin.shell: |
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    kubectl version --client

- name: Disable swap temporarily
  ansible.builtin.shell: |
    sudo swapoff -a

- name: Ensure swap is disabled permanently
  ansible.builtin.shell: |
    sudo sed -i '/swap/d' /etc/fstab

- name: Install k8s v1.33 and dependencies
  ansible.builtin.shell: |
    sudo apt-get update && \
    sudo apt-get install -y apt-transport-https ca-certificates curl gpg && \
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg && \
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list && \
    sudo apt-get update && \
    sudo apt-get install -y kubelet kubeadm kubectl && \
    sudo apt-mark hold kubelet kubeadm kubectl

- name: k8s init (only on control plane)
  ansible.builtin.shell: |
    kubeadm init --control-plane-endpoint={{ hostvars[groups['server'][0]].ansible_host }}
  when: inventory_hostname == groups['server'][0]

- name: Export kubeconfig
  ansible.builtin.shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf

- name: Install CNI (Calico)
  ansible.builtin.shell:
    helm install calico projectcalico/tigera-operator --version v3.29.3 --namespace tigera-operator

- name: Fetch Token (on control plane)
  ansible.builtin.shell: kubeadm token create
  register: k8s_token
  become: true
  delegate_to: "{{ groups['server'][0] }}"
  when: inventory_hostname == groups['server'][0]

- name: Show generated token
  debug:
    msg: "The generated token is {{ k8s_token.stdout }}"
  when: k8s_token is defined

- name: Fetch Value of --discovery-token-ca-cert-hash (on control plane)
  ansible.builtin.shell: |
    sudo cat /etc/kubernetes/pki/ca.crt | openssl x509 -pubkey  | openssl rsa -pubin -outform der 2>/dev/null | \
    openssl dgst -sha256 -hex | sed 's/^.* //'
  register: ca_cert_hash
  become: true
  delegate_to: "{{ groups['server'][0] }}"
  when: inventory_hostname == groups['server'][0]

- name: Show CA cert hash
  debug:
    msg: "The CA cert hash is {{ ca_cert_hash.stdout }}"
  when: ca_cert_hash is defined
