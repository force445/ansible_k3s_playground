---
# This playbook fully resets and prepares a Kubernetes worker node for joining a cluster

- name: Reset and Join Kubernetes Worker Node
  hosts: agent
  become: true
  tasks:

    - name: Stop kubelet service (if running)
      systemd:
        name: kubelet
        state: stopped
        enabled: false
      ignore_errors: true

    - name: Reset Kubernetes state
      shell: kubeadm reset -f
      ignore_errors: true

    - name: Remove Kubernetes config and CNI directories
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /var/lib/etcd
        - /etc/cni
        - /opt/cni

    - name: Disable swap
      shell: swapoff -a
      ignore_errors: true

    - name: Remove swap entry from fstab
      replace:
        path: /etc/fstab
        regexp: '^.* swap .*$'
        replace: ''
      ignore_errors: true

    - name: Install required base packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: true

    - name: Ensure /opt/cni/bin exists
      file:
        path: /opt/cni/bin
        state: directory
        mode: '0755'

    - name: Install CNI plugin binaries
      unarchive:
        src: https://github.com/containernetworking/plugins/releases/download/v1.4.0/cni-plugins-linux-amd64-v1.4.0.tgz
        dest: /opt/cni/bin
        remote_src: yes
        creates: /opt/cni/bin/loopback

    - name: Create CNI config directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /opt/cni/bin
        - /etc/cni/net.d

    - name: Enable required sysctl settings
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { name: 'net.ipv4.ip_forward', value: '1' }

    - name: Add Kubernetes APT key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | \
        gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes APT repo
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /"
        filename: kubernetes
        state: present

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: true

    - name: Hold Kubernetes components
      shell: apt-mark hold kubelet kubeadm kubectl

    - name: Ensure containerd is running
      systemd:
        name: containerd
        state: started
        enabled: true

    - name: Set crictl config file for containerd
      copy:
        dest: /etc/crictl.yaml
        content: |
          runtime-endpoint: unix:///run/containerd/containerd.sock
          image-endpoint: unix:///run/containerd/containerd.sock
        mode: '0644'

    - name: Join the node to the cluster
      shell: "{{ hostvars[groups['server'][0]].join_command_text }}"
      when: hostvars[groups['server'][0]].join_command_text is defined

    - name: Delete calico-node pod (force redeploy)
      shell: |
        kubectl delete pod -n kube-system -l k8s-app=calico-node --field-selector spec.nodeName={{ inventory_hostname }} || true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      delegate_to: "{{ groups['server'][0] }}"
      run_once: false